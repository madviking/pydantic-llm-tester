# This workflow builds and publishes the Python package to PyPI when a tag is pushed

name: Publish Python Package to PyPI

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v0.1.0, v1.2.3, etc.

jobs:
  deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Specify the Python version you want to use

#    - name: Extract version from tag
#      id: get_version
#      run: |
#        TAG=${GITHUB_REF#refs/tags/}
#        # Remove the 'v' prefix if it exists
#        VERSION=${TAG#v}
#        echo "version=$VERSION" >> $GITHUB_OUTPUT
#        echo "Extracted version: $VERSION"
#
#    - name: Update version in setup.py
#      run: |
#        VERSION="${{ steps.get_version.outputs.version }}"
#        # This sed command looks for a version pattern in setup.py and replaces it
#        sed -i "s/version=['\"][^'\"]*['\"]/version='$VERSION'/g" setup.py
#        # Check if the version was actually updated
#        grep "version=" setup.py

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
      # If you have build-specific dependencies, install them here
      # pip install -r requirements-build.txt

    - name: Build package
      run: python -m build

    - name: Publish package to PyPI using trusted publishing
      uses: pypa/gh-action-pypi-publish@release/v1
      # This action uses PyPI's OIDC trusted publishing.
